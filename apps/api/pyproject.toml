[tool.poetry]
name = "AFB Requests"
version = "0.1.0"
description = "allows people to both request and donate pet food to help feed animals."
authors = ["Delano"]
license = "MIT"
readme = "README.md"
package-mode = false

# [build-system]
# requires = ["poetry-core>=1.0.0"]
# build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.8 || ^3.9 || ^3.10 || ^3.11 || ^3.12"
Django = "5.0.3"
asgiref = "3.8.1"
asttokens = "2.4.1"
attrs = "23.2.0"
build = "1.1.1"
certifi = "2024.2.2"
cfgv = "3.4.0"
charset-normalizer = "3.3.2"
click = "8.1.7"
coverage = "7.4.4"
decorator = "5.1.1"
distlib = "0.3.8"
django-cors-headers = "4.3.1"
django-extensions = "3.2.3"
django-filter = "24.1"
django-model-utils = "4.4.0"
django-phonenumber-field = "7.3.0"
django-unfold = "0.21.1"
django-vite = "3.0.3"
drf-spectacular = "0.27.1"
drf-spectacular-sidecar = "2024.3.4"
executing = "2.0.1"
filelock = "3.13.1"
identify = "2.5.35"
idna = "3.6"
inflection = "0.5.1"
iniconfig = "2.0.0"
ipdb = "0.13.13"
ipython = "8.22.2"
jedi = "0.19.1"
jsonschema = "4.21.1"
jsonschema-specifications = "2023.12.1"
markdown = "3.6"
markupsafe = "2.1.5"
matplotlib-inline = "0.1.6"
nodeenv = "1.8.0"
packaging = "24.0"
parso = "0.8.3"
pexpect = "4.9.0"
phonenumbers = "8.13.32"
pip-tools = "7.4.1"
platformdirs = "4.2.0"
pluggy = "1.4.0"
pre-commit = "3.7.0"
prompt-toolkit = "3.0.43"
psycopg2-binary = "2.9.9"
ptyprocess = "0.7.0"
pure-eval = "0.2.2"
pygments = "2.17.2"
pyproject-hooks = "1.0.0"
pytest = "8.1.1"
pytest-django = "4.8.0"
python-dotenv = "1.0.1"
pyyaml = "6.0.1"
referencing = "0.34.0"
requests = "2.31.0"
rpds-py = "0.18.0"
six = "1.16.0"
sqlparse = "0.4.4"
stack-data = "0.6.3"
traitlets = "5.14.2"
uritemplate = "4.1.1"
urllib3 = "2.2.1"
virtualenv = "20.25.1"
wcwidth = "0.2.13"
werkzeug = "3.0.1"
wheel = "0.43.0"
djangorestframework = {git = "https://github.com/delano/django-rest-framework.git", rev = "dev"}
drf-registration = {git = "https://github.com/delano/drf-registration.git", rev = "dev"}
drfpasswordless = {git = "https://github.com/delano/django-rest-framework-passwordless.git", rev = "dev"}


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
  "__pycache__",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
