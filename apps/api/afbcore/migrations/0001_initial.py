# Generated by Django 5.0.6 on 2024-06-01 22:33

import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import phonenumber_field.modelfields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="DeliveryRegion",
            fields=[
                (
                    "location_name",
                    models.CharField(
                        help_text="ie Winnipeg, MB;  Medicine Hat, AB etc.",
                        max_length=255,
                    ),
                ),
                (
                    "address_line1",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "address_line2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "state_or_province",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "postal_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "country",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "ext_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_removed", models.BooleanField(default=False)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the region (e.g. postal code, city, or area)",
                        max_length=255,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FoodAvailable",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "pet_type",
                    models.CharField(
                        choices=[
                            ("Cat", "Cat"),
                            ("Dog", "Dog"),
                            ("Other", "Other"),
                        ],
                        max_length=255,
                    ),
                ),
                ("food_type", models.CharField(max_length=255)),
                ("food_amount", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Pet",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("pet_type", models.CharField(max_length=50)),
                ("pet_name", models.CharField(max_length=50)),
                ("pet_dob", models.CharField(max_length=10)),
                ("food_details", models.JSONField(default=dict)),
                ("dog_details", models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_removed", models.BooleanField(default=False)),
                (
                    "id",
                    model_utils.fields.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("level", models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="password"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date joined",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "id",
                    model_utils.fields.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254,
                        unique=True,
                        verbose_name="email address",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "terms_agreement",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates whether the user has agreed to the terms of service.",
                        verbose_name="terms agreement",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="username",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Branch",
            fields=[
                (
                    "location_name",
                    models.CharField(
                        help_text="ie Winnipeg, MB;  Medicine Hat, AB etc.",
                        max_length=255,
                    ),
                ),
                (
                    "address_line1",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "address_line2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "state_or_province",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "postal_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "country",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "ext_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "display_name",
                    models.CharField(
                        blank=True,
                        help_text="ie Winnipeg, MB",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("pickup_locations", models.TextField(blank=True, null=True)),
                (
                    "frequency_of_requests",
                    models.CharField(default="Monthly", max_length=255),
                ),
                ("spay_neuter_requirement", models.BooleanField(default=False)),
                ("pets_per_household_max", models.IntegerField(default=4)),
                ("delivery_deadline_days", models.IntegerField(default=30)),
                (
                    "delivery_type",
                    models.CharField(
                        choices=[
                            ("drop_off", "Drop off"),
                            ("pick_up", "Pick up"),
                        ],
                        default="Drop off",
                        max_length=24,
                    ),
                ),
                (
                    "delivery_pickup_details",
                    models.TextField(blank=True, null=True),
                ),
                ("blurb", models.TextField(blank=True, null=True)),
                (
                    "blurb_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="branch_images/"
                    ),
                ),
                (
                    "delivery_regions",
                    models.ManyToManyField(to="afbcore.deliveryregion"),
                ),
            ],
            options={
                "verbose_name_plural": "Branches",
            },
        ),
        migrations.CreateModel(
            name="FoodRequest",
            fields=[
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_removed", models.BooleanField(default=False)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("address_text", models.TextField(blank=True, null=True)),
                (
                    "address_google_place_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "address_canadapost_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "address_latitude",
                    models.FloatField(blank=True, default=0, null=True),
                ),
                (
                    "address_longitude",
                    models.FloatField(blank=True, default=0, null=True),
                ),
                (
                    "address_buildingtype",
                    models.CharField(
                        choices=[
                            ("HOUSE", "House"),
                            ("APARTMENT", "Apartment"),
                            ("TOWNHOUSE", "Townhouse"),
                            ("CONDO", "Condo"),
                            ("LANEWAY", "Laneway"),
                            ("DETACHED_HOUSE", "Detached house"),
                            ("OTHER", "Other"),
                            ("NOT_SPECIFIED", "Not specified"),
                        ],
                        default="NOT_SPECIFIED",
                        max_length=100,
                    ),
                ),
                ("address_details", models.JSONField(default=dict)),
                (
                    "contact_phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, region="CA"
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(blank=True, max_length=254),
                ),
                ("contact_name", models.CharField(max_length=100)),
                ("method_of_contact", models.CharField(max_length=100)),
                ("safe_drop_agree", models.BooleanField(blank=True, null=True)),
                (
                    "safe_drop_instructions",
                    models.TextField(blank=True, max_length=255, null=True),
                ),
                ("confirm_correct", models.BooleanField(null=True)),
                ("accept_terms", models.BooleanField(null=True)),
                ("flagged", models.BooleanField(default=False)),
                ("date_requested", models.DateField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("received", "Request Received"),
                            ("approved", "Request Approved & in Queue"),
                            ("denied", "Request Denied"),
                            ("assigned", "Volunteer Assigned"),
                            (
                                "ready_for_pickup",
                                "Request Ready For Volunteer Pickup",
                            ),
                            ("scheduled", "Delivery Scheduled"),
                            ("out_for_delivery", "Out For Delivery"),
                            ("delivered", "Delivered"),
                            ("undeliverable", "Undeliverable"),
                        ],
                        default="received",
                        max_length=20,
                    ),
                ),
                ("comments", models.JSONField(default=dict)),
                (
                    "branch",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="afbcore.branch",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("pets", models.ManyToManyField(to="afbcore.pet")),
            ],
            options={
                "ordering": ["-date_requested"],
            },
        ),
        migrations.CreateModel(
            name="Delivery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("delivery_date", models.DateField()),
                ("delivery_time", models.TimeField()),
                ("delivery_address", models.CharField(max_length=255)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "food_available",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="afbcore.foodavailable",
                    ),
                ),
                (
                    "food_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="afbcore.foodrequest",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_removed", models.BooleanField(default=False)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("preferred_name", models.CharField(max_length=64)),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=128, region="US"
                    ),
                ),
                (
                    "address_verbatim",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "address",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("points_earned", models.IntegerField(default=0)),
                (
                    "validated_postal_code",
                    models.CharField(max_length=20, null=True),
                ),
                ("country", models.CharField(blank=True, max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("on_hold", "On Hold"),
                            ("banned", "Banned"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "branches",
                    models.ManyToManyField(
                        blank=True, related_name="+", to="afbcore.branch"
                    ),
                ),
                (
                    "delivery_regions",
                    models.ManyToManyField(to="afbcore.deliveryregion"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="profiles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="profiles",
                        to="afbcore.role",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
