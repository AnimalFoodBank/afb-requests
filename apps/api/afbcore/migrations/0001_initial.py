# Generated by Django 4.2.7 on 2023-11-03 18:06

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_removed", models.BooleanField(default=False)),
                (
                    "id",
                    model_utils.fields.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Branch",
            fields=[
                (
                    "display_name",
                    models.CharField(
                        blank=True,
                        help_text="ie Winnipeg, MB",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "address_line1",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "address_line2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("city", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "state_or_province",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "postal_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("ext_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "location_name",
                    models.CharField(
                        help_text="ie Winnipeg, MB;  Medicine Hat, AB etc.",
                        max_length=255,
                    ),
                ),
                ("pickup_locations", models.TextField(blank=True, null=True)),
                ("frequency_of_requests", models.CharField(max_length=255)),
                ("spay_neuter_requirement", models.BooleanField(default=False)),
                ("pets_per_household_max", models.IntegerField(default=4)),
                ("delivery_deadline_days", models.IntegerField(default=3)),
                (
                    "delivery_type",
                    models.CharField(
                        choices=[("drop_off", "Drop off"), ("pick_up", "Pick up")],
                        default="Drop off",
                        max_length=24,
                    ),
                ),
                ("delivery_pickup_details", models.TextField(blank=True)),
                ("blurb", models.TextField(blank=True)),
                (
                    "blurb_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="branch_images/"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DeliveryRegion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the region (e.g. postal code, city, or area)",
                        max_length=255,
                    ),
                ),
                ("description", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="FoodAvailable",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "pet_type",
                    models.CharField(
                        choices=[("Cat", "Cat"), ("Dog", "Dog"), ("Other", "Other")],
                        max_length=255,
                    ),
                ),
                ("food_type", models.CharField(max_length=255)),
                ("food_amount", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Pet",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("dob", models.DateField(blank=True, null=True)),
                (
                    "size",
                    models.CharField(
                        choices=[
                            ("TOY", "Toy - up to 10lbs"),
                            ("SMALL_BREED", "Small Breed - 10-20 lbs"),
                            ("MEDIUM_BREED", "Medium Breed - 20-50 lbs"),
                            ("LARGE_BREED", "Large Breed - 50-100 lbs"),
                            ("GIANT_BREED", "Giant Breed - 100+ lbs"),
                        ],
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "weight",
                    models.CharField(
                        choices=[
                            ("UP_TO_10_LBS", "Up to 10 lbs"),
                            ("FROM_10_TO_20_LBS", "10-20 lbs"),
                            ("FROM_20_TO_50_LBS", "20-50 lbs"),
                            ("FROM_50_TO_100_LBS", "50-100 lbs"),
                            ("OVER_100_LBS", "Over 100 lbs"),
                        ],
                        max_length=32,
                        null=True,
                    ),
                ),
                ("usual_food_brands", models.TextField(blank=True)),
                ("allergies", models.BooleanField(null=True)),
                ("allergy_types", models.TextField(blank=True)),
                (
                    "pictures",
                    models.ImageField(blank=True, null=True, upload_to="pet_pictures/"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("first_name", models.CharField(max_length=64)),
                ("last_name", models.CharField(max_length=64)),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=20, null=True, region="US"
                    ),
                ),
                ("address_verbatim", models.CharField(blank=True, max_length=255)),
                ("address", models.CharField(max_length=255, null=True)),
                ("points_earned", models.IntegerField(default=0)),
                ("validated_postal_code", models.CharField(max_length=20, null=True)),
                ("country", models.CharField(blank=True, max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("on_hold", "On Hold"),
                            ("banned", "Banned"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "branches",
                    models.ManyToManyField(
                        blank=True, related_name="+", to="afbcore.branch"
                    ),
                ),
                (
                    "delivery_regions",
                    models.ManyToManyField(to="afbcore.deliveryregion"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("level", models.SmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Request",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("confirm_address", models.BooleanField()),
                ("confirm_phone_number", models.BooleanField()),
                ("method_of_contact", models.CharField(max_length=100)),
                ("date_requested", models.DateField(auto_now_add=True)),
                ("safe_drop", models.BooleanField()),
                ("request_notes", models.TextField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("received", "Request Received"),
                            ("approved", "Request Approved & in Queue"),
                            ("denied", "Request Denied"),
                            ("assigned", "Volunteer Assigned"),
                            ("ready_for_pickup", "Request Ready For Volunteer Pickup"),
                            ("scheduled", "Delivery Scheduled"),
                            ("out_for_delivery", "Out For Delivery"),
                            ("delivered", "Delivered"),
                            ("undeliverable", "Undeliverable"),
                        ],
                        default="received",
                        max_length=20,
                    ),
                ),
                (
                    "driver_comments",
                    models.TextField(blank=True, max_length=255, null=True),
                ),
                (
                    "picture_of_delivery",
                    models.ImageField(
                        blank=True, null=True, upload_to="delivery_pictures/"
                    ),
                ),
                ("needs_review", models.BooleanField()),
                (
                    "branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="afbcore.branch",
                    ),
                ),
                (
                    "food_types_available",
                    models.ManyToManyField(to="afbcore.foodavailable"),
                ),
                ("pets", models.ManyToManyField(to="afbcore.pet")),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="afbcore.profile",
                    ),
                ),
            ],
            options={
                "ordering": ["-date_requested"],
            },
        ),
        migrations.AddField(
            model_name="profile",
            name="role",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.DO_NOTHING, to="afbcore.role"
            ),
        ),
        migrations.AddField(
            model_name="profile",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="profiles",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="pet",
            name="profile",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="afbcore.profile"
            ),
        ),
        migrations.CreateModel(
            name="Delivery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("delivery_date", models.DateField()),
                ("delivery_time", models.TimeField()),
                ("delivery_address", models.CharField(max_length=255)),
                (
                    "food_available",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="afbcore.foodavailable",
                    ),
                ),
                (
                    "pet_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="afbcore.request",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="branch",
            name="delivery_regions",
            field=models.ManyToManyField(to="afbcore.deliveryregion"),
        ),
    ]
