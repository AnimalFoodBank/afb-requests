

# ===== UI =====

# PORT=1700
HOST=dev.afb.pet

# Uncomment to enable debug mode. Re-comment to disable (as
# opposed to setting it to false, which will still enable it)
# NUXT_DEBUG=true

# Meant for dev only, do not use in production
NUXT_DEVTOOLS=true

# Public URL, used for OG Image when running nuxt generate
NUXT_PUBLIC_SITE_URL=

# Run nuxt on all interfaces so it can be accessed from other containers
# HOST=0.0.0.0

NUXT_API_SECRET = CHANGEME

NUXT_PUBLIC_API_BASE = https://dev.afb.pet/
NUXT_PUBLIC_APP_ORIGIN=https://dev.afb.pet/
# NUXT_PUBLIC_API_BASE = http://127.0.0.1:8000
# NUXT_PUBLIC_APP_ORIGIN=http://127.0.0.1:3000

NUXT_PUBLIC_DEFAULT_LOCALE=en

# See:
# https://github.com/sidebase/nuxt-auth
# https://github.com/sidebase/nuxt-auth-example/
# https://sidebase.io/nuxt-auth/getting-started
AUTH_SECRET=CHANGEME

# =========================================================
# TODO: Secure these keys before deploying to production
#
# https://stackoverflow.com/questions/71757310/sign-in-with-google-gis-on-vue-js-application
# https://medium.com/@jebasuthan/signup-with-google-using-vuejs-11c9d4428250
#
AUTH_GOOGLE_CLIENT_ID=CHANGEME
AUTH_GOOGLE_CLIENT_SECRET=CHANGEME

# TOOO: Purchase a license for Nuxt UI Pro
NUXT_UI_PRO_LICENSE=CHANGEME

# Don't have this fully working yet. When using the command `nuxi dev --tunnel`,
# it will open a tunnel to your local server and give you a public URL. Using
# that URL, pasting it in to the Nuxt Studio, will allow you to see the
# requests in the Nuxt Studio. OR should, the nuxt.studio UI keeps saying
# "Cannot find any studio config at that URL"
# https://nuxt.studio/@delano/afb-requests?success=true
NUXT_PUBLIC_STUDIO_TOKENS=CHANGEME



# ===== API =====

DEBUG=False

# Backend API
#
# This is the base host URL for the backend server. In the
# development environment, it's set to `dev.afb.pet`. We use
# HTTPS in dev thanks to the `mkcert` tool. It's a development
# certificate authority that is used to create local SSL
# certificates which are trusted by the local machine.
BASE_HOST = dev.afb.pet
URI_SCHEMA = "https"

STAGING_HOST = staging.example.com
PRODUCTION_HOST = example.com

# Frontend UI
#
# This is the base host URL for the frontend application. In
# the development environment, it's set to `dev.afb.pet` as
# well. Even though the backend is django and the frontend is
# nuxt/vue, we serve them via the same domain in to mimic the
# production environment. To do this, we use a reverse proxy
# server like Nginx or Caddy (we use Caddy).
UI_BASE_HOST = dev.afb.pet
UI_URI_SCHEMA = "https"
LOGIN_REDIRECT_URL = "/dashboard"


SECRET_KEY = "CHANGEME"


# Default mail settings for Mailpit
# https://github.com/axllent/mailpit
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_TIMEOUT = 5
EMAIL_HOST = "localhost"
EMAIL_PORT = 1025
# EMAIL_HOST_USER =
# EMAIL_HOST_PASSWORD =

# EMAIL_USE_TLS/EMAIL_USE_SSL are mutually exclusive, so only
# set a value to one of these settings. Which one you choose
# is related to which port the service is running on, typically:
#
# 25    unencrypted
# 587   TLS
# 465   SSL
# 1025  Mailpit (unencrypted)
#
#EMAIL_USE_SSL=True
EMAIL_USE_TLS=True

# Default DB settings for Django using SQLite. In production,
# use a more robust database like PostgreSQL or CockroachDB.
DB_ENGINE = "django.db.backends.sqlite3"
DB_NAME = "db.sqlite3"
DB_USER = ""
DB_PASSWORD = ""
DB_HOST = ""
DB_PORT = ""

# Set to True to enable debug mode. Never use this in production.
DEBUG = False
